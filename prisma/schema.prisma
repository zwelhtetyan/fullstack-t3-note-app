generator client {
    provider = "prisma-client-js"
}
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String? @unique
  username        String? @unique
  password        String?
  image           String?
  emailVerified   DateTime?
  posts           Post[]
  accounts        Account[]
  sessions        Session[]
  createdAt       DateTime @default(now())
  updateAt        DateTime @updatedAt
}

model Post {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  content         String
  authorId        String @db.ObjectId
  author          User   @relation(fields: [authorId], references: [id])
  createdAt       DateTime @default(now())
  updateAt        DateTime @updatedAt
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}
model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String   @id @default(auto()) @map("_id") @db.ObjectId
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}
