import { useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect } from "react";
import { Header } from "~/components/Header";
import MarkdownContent from "~/components/MarkdownContent";
import Spinner from "~/components/Spinner";
import { api } from "~/utils/api";
import { formatDate } from "~/utils/formatDate";

const NoteDetail = () => {
  const router = useRouter();
  const { data: sessionData, status } = useSession();

  const { data: note, isLoading: loadingNote } = api.note.getNote.useQuery({
    noteId: (router.query.noteId as string) ?? "",
  });

  useEffect(() => {
    if (status !== "loading" && !sessionData) {
      router.push("/");
    }
  }, [sessionData]);

  const meta = {
    title: !note ? "Note Taker" : `${router.query.topicName} | ${note?.title}`,
  };

  return (
    <>
      <Head>
        <title>{meta.title}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header />

        <div className="mx-auto w-full max-w-2xl p-4">
          {loadingNote && <Spinner />}
          {!loadingNote && note && (
            <div>
              <Link
                href="/"
                className="mb-8 block text-gray-300 underline hover:text-gray-400"
              >
                Go back
              </Link>

              <h1 className="mb-2 text-2xl font-bold">{note.title}</h1>

              <p className="mb-6 text-sm text-gray-400">
                {formatDate(note.createdAt)}
              </p>

              <div className="prose w-full max-w-full">
                <MarkdownContent content={note.content} />
              </div>
            </div>
          )}
        </div>
      </main>
    </>
  );
};

export default NoteDetail;
