import Head from "next/head";
import { useRouter } from "next/router";
import { Header } from "~/components/Header";
import Layout from "~/components/Layout";
import NoteCard from "~/components/note/NoteCard";
import Spinner from "~/components/Spinner";
import { api } from "~/utils/api";

const search = () => {
  const { query } = useRouter();

  const { data: searchedNotes, isLoading: loadingSearchedNotes } =
    api.note.getNotesByRelevantTitle.useQuery(
      { searchTerm: query.q as string },
      {
        enabled: query.q !== undefined && query.q !== "",
      }
    );

  return (
    <>
      <Head>
        <title>Search | Noteüìù</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header />
        <Layout>
          <div className="col-span-3 grid grid-cols-auto_fill_250 gap-4 p-4">
            {loadingSearchedNotes && <Spinner />}

            {!loadingSearchedNotes &&
              searchedNotes &&
              searchedNotes.length > 0 &&
              searchedNotes.map((note) => (
                <NoteCard
                  key={note.id}
                  id={note.id}
                  title={note.title}
                  createdAt={note.createdAt}
                  topicName={note.topic.title}
                />
              ))}

            {!loadingSearchedNotes &&
              searchedNotes &&
              searchedNotes.length === 0 && <p>No result found!</p>}
          </div>
        </Layout>
      </main>
    </>
  );
};

export default search;
